<nav
  class="bg-transparent text-black dark:border-gray-700 w-full absolute top-0 left-0 z-50 py-4 md:py-8 px-6 md:px-10 lg:px-14"
>
  <div class="flex items-start justify-between">
    <a
      href="/"
      class="flex items-center space-x-3 rtl:space-x-reverse md:pb-5 xl:pb-0"
    >
      <img
        src="/assets/img/png/logo.png"
        class="h-12 md:h-20 lg:h-28 lg:max-w-[358px] md:max-w-[358px]"
        alt="Logo"
      />
    </a>
    <button
      data-collapse-toggle="navbar-solid-bg"
      type="button"
      class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-300 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      aria-controls="navbar-solid-bg"
      aria-expanded="false"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        class="w-5 h-5"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 17 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 1h15M1 7h15M1 13h15"></path>
      </svg>
    </button>
    <div class="hidden w-full md:block md:w-auto h-full" id="navbar-solid-bg">
      <ul
        class="flex flex-col flex-wrap justify-end font-medium mt-4 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row gap-2 md:mt-0 md:border-0 md:bg-transparent dark:bg-gray-900/90 md:dark:bg-transparent dark:border-gray-700"
      >
        <li>
          <a
            href="/#about"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-white bg-blue-700 rounded-lg md:bg-transparent md:text-blue-700 md:dark:text-blue-500 dark:bg-[#47ccc39c] md:dark:bg-transparent nav-link transition-colors duration-300"
            aria-current="page"
            data-target="about"
            data-offset="130">About</a
          >
        </li>
        <li>
          <a
            href="/#message"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            data-target="message"
            data-offset="130">Tariff</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            >Abstract</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            >Scientific</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            >Accommodations</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            >Attractions</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            >Download</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 md:p-0 text-base sm:text-lg md:text-base lg:text-lg text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent nav-link transition-colors duration-300"
            >Contact Us</a
          >
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  // Handle outside click and menu toggle functionality
  document.addEventListener('DOMContentLoaded', function () {
    const toggleButton = document.querySelector(
      '[data-collapse-toggle="navbar-solid-bg"]'
    ) as HTMLElement;
    const navbar = document.getElementById('navbar-solid-bg');

    if (toggleButton && navbar) {
      // Toggle menu when button is clicked
      toggleButton.addEventListener('click', function (event) {
        event.stopPropagation(); // Prevent this click from triggering the document click handler
        const isExpanded =
          toggleButton.getAttribute('aria-expanded') === 'true';

        if (isExpanded) {
          navbar.classList.remove('block');
          navbar.classList.add('hidden');
          toggleButton.setAttribute('aria-expanded', 'false');
        } else {
          navbar.classList.remove('hidden');
          navbar.classList.add('block');
          toggleButton.setAttribute('aria-expanded', 'true');
        }
      });

      // Close menu when clicking outside
      document.addEventListener('click', function (event) {
        const target = event.target as Node;

        if (
          navbar.classList.contains('block') &&
          !navbar.contains(target) &&
          !toggleButton.contains(target)
        ) {
          navbar.classList.remove('block');
          navbar.classList.add('hidden');
          toggleButton.setAttribute('aria-expanded', 'false');
        }
      });

      // Close menu when a nav link is clicked (on mobile)
      const navLinks = document.querySelectorAll('.nav-link');
      navLinks.forEach((link) => {
        link.addEventListener('click', function () {
          if (window.innerWidth < 768) {
            // Only on mobile
            navbar.classList.remove('block');
            navbar.classList.add('hidden');
            toggleButton.setAttribute('aria-expanded', 'false');
          }
        });
      });

      // Handle window resize - show menu on larger screens
      window.addEventListener('resize', function () {
        if (window.innerWidth >= 768) {
          // md breakpoint in Tailwind
          navbar.classList.remove('hidden');
          navbar.classList.add('md:block');
        } else if (toggleButton.getAttribute('aria-expanded') !== 'true') {
          navbar.classList.add('hidden');
        }
      });
    }
  });
</script>
